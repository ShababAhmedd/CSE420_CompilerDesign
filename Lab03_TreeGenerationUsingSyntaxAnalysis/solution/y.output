Terminals which are not used

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_definition

    6 func_definition: type_specifier id_name LPAREN parameter_list RPAREN compound_statement
    7                | type_specifier id_name LPAREN RPAREN compound_statement

    8 parameter_list: parameter_list COMMA type_specifier ID
    9               | parameter_list COMMA type_specifier
   10               | type_specifier ID
   11               | type_specifier

   12 compound_statement: LCURL statements RCURL
   13                   | LCURL RCURL

   14 var_declaration: type_specifier declaration_list SEMICOLON

   15 type_specifier: INT
   16               | FLOAT
   17               | VOID

   18 declaration_list: declaration_list COMMA id_name
   19                 | declaration_list COMMA id_name LTHIRD CONST_INT RTHIRD
   20                 | id_name
   21                 | id_name LTHIRD CONST_INT RTHIRD

   22 id_name: ID

   23 statements: statement
   24           | statements statement

   25 statement: var_declaration
   26          | expression_statement
   27          | compound_statement
   28          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   29          | IF LPAREN expression RPAREN statement
   30          | IF LPAREN expression RPAREN statement ELSE statement
   31          | WHILE LPAREN expression RPAREN statement
   32          | PRINTF LPAREN id_name RPAREN SEMICOLON
   33          | RETURN expression SEMICOLON

   34 expression_statement: SEMICOLON
   35                     | expression SEMICOLON

   36 variable: id_name
   37         | id_name LTHIRD expression RTHIRD

   38 expression: logic_expression
   39           | variable ASSIGNOP logic_expression

   40 logic_expression: rel_expression
   41                 | rel_expression LOGICOP rel_expression

   42 rel_expression: simple_expression
   43               | simple_expression RELOP simple_expression

   44 simple_expression: term
   45                  | simple_expression ADDOP term

   46 term: unary_expression
   47     | term MULOP unary_expression

   48 unary_expression: ADDOP unary_expression
   49                 | NOT unary_expression
   50                 | factor

   51 factor: variable
   52       | id_name LPAREN argument_list RPAREN
   53       | LPAREN expression RPAREN
   54       | CONST_INT
   55       | CONST_FLOAT
   56       | variable INCOP
   57       | variable DECOP

   58 argument_list: arguments
   59              | /* empty */

   60 arguments: arguments COMMA logic_expression
   61          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 29 30
ELSE (259) 30
FOR (260) 28
WHILE (261) 31
DO (262)
BREAK (263)
INT (264) 15
CHAR (265)
FLOAT (266) 16
DOUBLE (267)
VOID (268) 17
RETURN (269) 33
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
PRINTF (274) 32
ADDOP (275) 45 48
MULOP (276) 47
INCOP (277) 56
DECOP (278) 57
RELOP (279) 43
ASSIGNOP (280) 39
LOGICOP (281) 41
NOT (282) 49
LPAREN (283) 6 7 28 29 30 31 32 52 53
RPAREN (284) 6 7 28 29 30 31 32 52 53
LCURL (285) 12 13
RCURL (286) 12 13
LTHIRD (287) 19 21 37
RTHIRD (288) 19 21 37
COMMA (289) 8 9 18 19 60
SEMICOLON (290) 14 32 33 34 35
CONST_INT (291) 19 21 54
CONST_FLOAT (292) 55
ID (293) 8 10 22
LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5, on right: 2 3
func_definition (44)
    on left: 6 7, on right: 5
parameter_list (45)
    on left: 8 9 10 11, on right: 6 8 9
compound_statement (46)
    on left: 12 13, on right: 6 7 27
var_declaration (47)
    on left: 14, on right: 4 25
type_specifier (48)
    on left: 15 16 17, on right: 6 7 8 9 10 11 14
declaration_list (49)
    on left: 18 19 20 21, on right: 14 18 19
id_name (50)
    on left: 22, on right: 6 7 18 19 20 21 32 36 37 52
statements (51)
    on left: 23 24, on right: 12 24
statement (52)
    on left: 25 26 27 28 29 30 31 32 33, on right: 23 24 28 29 30 31
expression_statement (53)
    on left: 34 35, on right: 26 28
variable (54)
    on left: 36 37, on right: 39 51 56 57
expression (55)
    on left: 38 39, on right: 28 29 30 31 33 35 37 53
logic_expression (56)
    on left: 40 41, on right: 38 39 60 61
rel_expression (57)
    on left: 42 43, on right: 40 41
simple_expression (58)
    on left: 44 45, on right: 42 43 45
term (59)
    on left: 46 47, on right: 44 45 47
unary_expression (60)
    on left: 48 49 50, on right: 46 47 48 49
factor (61)
    on left: 51 52 53 54 55 56 57, on right: 50
argument_list (62)
    on left: 58 59, on right: 52
arguments (63)
    on left: 60 61, on right: 58 60


state 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start            go to state 4
    program          go to state 5
    unit             go to state 6
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


state 1

   15 type_specifier: INT .

    $default  reduce using rule 15 (type_specifier)


state 2

   16 type_specifier: FLOAT .

    $default  reduce using rule 16 (type_specifier)


state 3

   17 type_specifier: VOID .

    $default  reduce using rule 17 (type_specifier)


state 4

    0 $accept: start . $end

    $end  shift, and go to state 10


state 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit             go to state 11
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


state 6

    3 program: unit .

    $default  reduce using rule 3 (program)


state 7

    5 unit: func_definition .

    $default  reduce using rule 5 (unit)


state 8

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


state 9

    6 func_definition: type_specifier . id_name LPAREN parameter_list RPAREN compound_statement
    7                | type_specifier . id_name LPAREN RPAREN compound_statement
   14 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 12

    declaration_list  go to state 13
    id_name           go to state 14


state 10

    0 $accept: start $end .

    $default  accept


state 11

    2 program: program unit .

    $default  reduce using rule 2 (program)


state 12

   22 id_name: ID .

    $default  reduce using rule 22 (id_name)


state 13

   14 var_declaration: type_specifier declaration_list . SEMICOLON
   18 declaration_list: declaration_list . COMMA id_name
   19                 | declaration_list . COMMA id_name LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 16


state 14

    6 func_definition: type_specifier id_name . LPAREN parameter_list RPAREN compound_statement
    7                | type_specifier id_name . LPAREN RPAREN compound_statement
   20 declaration_list: id_name .
   21                 | id_name . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 17
    LTHIRD  shift, and go to state 18

    $default  reduce using rule 20 (declaration_list)


state 15

   18 declaration_list: declaration_list COMMA . id_name
   19                 | declaration_list COMMA . id_name LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 12

    id_name  go to state 19


state 16

   14 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 14 (var_declaration)


state 17

    6 func_definition: type_specifier id_name LPAREN . parameter_list RPAREN compound_statement
    7                | type_specifier id_name LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 20

    parameter_list  go to state 21
    type_specifier  go to state 22


state 18

   21 declaration_list: id_name LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


state 19

   18 declaration_list: declaration_list COMMA id_name .
   19                 | declaration_list COMMA id_name . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 24

    $default  reduce using rule 18 (declaration_list)


state 20

    7 func_definition: type_specifier id_name LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 25

    compound_statement  go to state 26


state 21

    6 func_definition: type_specifier id_name LPAREN parameter_list . RPAREN compound_statement
    8 parameter_list: parameter_list . COMMA type_specifier ID
    9               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 27
    COMMA   shift, and go to state 28


state 22

   10 parameter_list: type_specifier . ID
   11               | type_specifier .

    ID  shift, and go to state 29

    $default  reduce using rule 11 (parameter_list)


state 23

   21 declaration_list: id_name LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 30


state 24

   19 declaration_list: declaration_list COMMA id_name LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 31


state 25

   12 compound_statement: LCURL . statements RCURL
   13                   | LCURL . RCURL

    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 35
    PRINTF       shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 25
    RCURL        shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    id_name               go to state 47
    statements            go to state 48
    statement             go to state 49
    expression_statement  go to state 50
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 26

    7 func_definition: type_specifier id_name LPAREN RPAREN compound_statement .

    $default  reduce using rule 7 (func_definition)


state 27

    6 func_definition: type_specifier id_name LPAREN parameter_list RPAREN . compound_statement

    LCURL  shift, and go to state 25

    compound_statement  go to state 59


state 28

    8 parameter_list: parameter_list COMMA . type_specifier ID
    9               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 60


state 29

   10 parameter_list: type_specifier ID .

    $default  reduce using rule 10 (parameter_list)


state 30

   21 declaration_list: id_name LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 21 (declaration_list)


state 31

   19 declaration_list: declaration_list COMMA id_name LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 61


state 32

   29 statement: IF . LPAREN expression RPAREN statement
   30          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 62


state 33

   28 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 63


state 34

   31 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 64


state 35

   33 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 51
    expression         go to state 65
    logic_expression   go to state 53
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 36

   32 statement: PRINTF . LPAREN id_name RPAREN SEMICOLON

    LPAREN  shift, and go to state 66


state 37

   48 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name           go to state 47
    variable          go to state 67
    unary_expression  go to state 68
    factor            go to state 58


state 38

   49 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name           go to state 47
    variable          go to state 67
    unary_expression  go to state 69
    factor            go to state 58


state 39

   53 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 51
    expression         go to state 70
    logic_expression   go to state 53
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 40

   13 compound_statement: LCURL RCURL .

    $default  reduce using rule 13 (compound_statement)


state 41

   34 expression_statement: SEMICOLON .

    $default  reduce using rule 34 (expression_statement)


state 42

   54 factor: CONST_INT .

    $default  reduce using rule 54 (factor)


state 43

   55 factor: CONST_FLOAT .

    $default  reduce using rule 55 (factor)


state 44

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


state 45

   25 statement: var_declaration .

    $default  reduce using rule 25 (statement)


state 46

   14 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 12

    declaration_list  go to state 13
    id_name           go to state 71


state 47

   36 variable: id_name .
   37         | id_name . LTHIRD expression RTHIRD
   52 factor: id_name . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 72
    LTHIRD  shift, and go to state 73

    $default  reduce using rule 36 (variable)


state 48

   12 compound_statement: LCURL statements . RCURL
   24 statements: statements . statement

    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 35
    PRINTF       shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 25
    RCURL        shift, and go to state 74
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    id_name               go to state 47
    statement             go to state 75
    expression_statement  go to state 50
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 49

   23 statements: statement .

    $default  reduce using rule 23 (statements)


state 50

   26 statement: expression_statement .

    $default  reduce using rule 26 (statement)


state 51

   39 expression: variable . ASSIGNOP logic_expression
   51 factor: variable .
   56       | variable . INCOP
   57       | variable . DECOP

    INCOP     shift, and go to state 76
    DECOP     shift, and go to state 77
    ASSIGNOP  shift, and go to state 78

    $default  reduce using rule 51 (factor)


state 52

   35 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 79


state 53

   38 expression: logic_expression .

    $default  reduce using rule 38 (expression)


state 54

   40 logic_expression: rel_expression .
   41                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 80

    $default  reduce using rule 40 (logic_expression)


state 55

   42 rel_expression: simple_expression .
   43               | simple_expression . RELOP simple_expression
   45 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 81
    RELOP  shift, and go to state 82

    $default  reduce using rule 42 (rel_expression)


state 56

   44 simple_expression: term .
   47 term: term . MULOP unary_expression

    MULOP  shift, and go to state 83

    $default  reduce using rule 44 (simple_expression)


state 57

   46 term: unary_expression .

    $default  reduce using rule 46 (term)


state 58

   50 unary_expression: factor .

    $default  reduce using rule 50 (unary_expression)


state 59

    6 func_definition: type_specifier id_name LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 6 (func_definition)


state 60

    8 parameter_list: parameter_list COMMA type_specifier . ID
    9               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 84

    $default  reduce using rule 9 (parameter_list)


state 61

   19 declaration_list: declaration_list COMMA id_name LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 19 (declaration_list)


state 62

   29 statement: IF LPAREN . expression RPAREN statement
   30          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 51
    expression         go to state 85
    logic_expression   go to state 53
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 63

   28 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name               go to state 47
    expression_statement  go to state 86
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 64

   31 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 51
    expression         go to state 87
    logic_expression   go to state 53
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 65

   33 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 66

   32 statement: PRINTF LPAREN . id_name RPAREN SEMICOLON

    ID  shift, and go to state 12

    id_name  go to state 89


state 67

   51 factor: variable .
   56       | variable . INCOP
   57       | variable . DECOP

    INCOP  shift, and go to state 76
    DECOP  shift, and go to state 77

    $default  reduce using rule 51 (factor)


state 68

   48 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 48 (unary_expression)


state 69

   49 unary_expression: NOT unary_expression .

    $default  reduce using rule 49 (unary_expression)


state 70

   53 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 90


state 71

   20 declaration_list: id_name .
   21                 | id_name . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 18

    $default  reduce using rule 20 (declaration_list)


state 72

   52 factor: id_name LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    $default  reduce using rule 59 (argument_list)

    id_name            go to state 47
    variable           go to state 67
    logic_expression   go to state 91
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58
    argument_list      go to state 92
    arguments          go to state 93


state 73

   37 variable: id_name LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 51
    expression         go to state 94
    logic_expression   go to state 53
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 74

   12 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 12 (compound_statement)


state 75

   24 statements: statements statement .

    $default  reduce using rule 24 (statements)


state 76

   56 factor: variable INCOP .

    $default  reduce using rule 56 (factor)


state 77

   57 factor: variable DECOP .

    $default  reduce using rule 57 (factor)


state 78

   39 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 67
    logic_expression   go to state 95
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 79

   35 expression_statement: expression SEMICOLON .

    $default  reduce using rule 35 (expression_statement)


state 80

   41 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 67
    rel_expression     go to state 96
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 81

   45 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name           go to state 47
    variable          go to state 67
    term              go to state 97
    unary_expression  go to state 57
    factor            go to state 58


state 82

   43 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 67
    simple_expression  go to state 98
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 83

   47 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name           go to state 47
    variable          go to state 67
    unary_expression  go to state 99
    factor            go to state 58


state 84

    8 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 8 (parameter_list)


state 85

   29 statement: IF LPAREN expression . RPAREN statement
   30          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 100


state 86

   28 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name               go to state 47
    expression_statement  go to state 101
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 87

   31 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 102


state 88

   33 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 33 (statement)


state 89

   32 statement: PRINTF LPAREN id_name . RPAREN SEMICOLON

    RPAREN  shift, and go to state 103


state 90

   53 factor: LPAREN expression RPAREN .

    $default  reduce using rule 53 (factor)


state 91

   61 arguments: logic_expression .

    $default  reduce using rule 61 (arguments)


state 92

   52 factor: id_name LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 104


state 93

   58 argument_list: arguments .
   60 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 105

    $default  reduce using rule 58 (argument_list)


state 94

   37 variable: id_name LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 106


state 95

   39 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 39 (expression)


state 96

   41 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 41 (logic_expression)


state 97

   45 simple_expression: simple_expression ADDOP term .
   47 term: term . MULOP unary_expression

    MULOP  shift, and go to state 83

    $default  reduce using rule 45 (simple_expression)


state 98

   43 rel_expression: simple_expression RELOP simple_expression .
   45 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 81

    $default  reduce using rule 43 (rel_expression)


state 99

   47 term: term MULOP unary_expression .

    $default  reduce using rule 47 (term)


state 100

   29 statement: IF LPAREN expression RPAREN . statement
   30          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 35
    PRINTF       shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 25
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    id_name               go to state 47
    statement             go to state 107
    expression_statement  go to state 50
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 101

   28 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 51
    expression         go to state 108
    logic_expression   go to state 53
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 102

   31 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 35
    PRINTF       shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 25
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    id_name               go to state 47
    statement             go to state 109
    expression_statement  go to state 50
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 103

   32 statement: PRINTF LPAREN id_name RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 104

   52 factor: id_name LPAREN argument_list RPAREN .

    $default  reduce using rule 52 (factor)


state 105

   60 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    id_name            go to state 47
    variable           go to state 67
    logic_expression   go to state 111
    rel_expression     go to state 54
    simple_expression  go to state 55
    term               go to state 56
    unary_expression   go to state 57
    factor             go to state 58


state 106

   37 variable: id_name LTHIRD expression RTHIRD .

    $default  reduce using rule 37 (variable)


state 107

   29 statement: IF LPAREN expression RPAREN statement .
   30          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 112

    $default  reduce using rule 29 (statement)


state 108

   28 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 113


state 109

   31 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 31 (statement)


state 110

   32 statement: PRINTF LPAREN id_name RPAREN SEMICOLON .

    $default  reduce using rule 32 (statement)


state 111

   60 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 60 (arguments)


state 112

   30 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 35
    PRINTF       shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 25
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    id_name               go to state 47
    statement             go to state 114
    expression_statement  go to state 50
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 113

   28 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 35
    PRINTF       shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 25
    SEMICOLON    shift, and go to state 41
    CONST_INT    shift, and go to state 42
    CONST_FLOAT  shift, and go to state 43
    ID           shift, and go to state 12

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    id_name               go to state 47
    statement             go to state 115
    expression_statement  go to state 50
    variable              go to state 51
    expression            go to state 52
    logic_expression      go to state 53
    rel_expression        go to state 54
    simple_expression     go to state 55
    term                  go to state 56
    unary_expression      go to state 57
    factor                go to state 58


state 114

   30 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 30 (statement)


state 115

   28 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 28 (statement)
